{"ast":null,"code":"var _jsxFileName = \"D:\\\\waviz\\\\react-training\\\\Rahul\\\\helloworld-waviz\\\\src\\\\components\\\\Otp.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Grid, Paper, Button, Typography } from '@material-ui/core';\nimport { TextField } from \"@material-ui/core\";\nimport { Formik, Form, Field, ErrorMessage, validateYupSchema } from \"formik\";\nimport { useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Otp = () => {\n  _s();\n\n  // style\n  var history = useHistory();\n  const [loginerror, setLoginerror] = useState(false);\n  const [otp, setOtp] = useState(\"\");\n  const paperStyle = {\n    padding: '40px 20px',\n    width: 300,\n    margin: '20px auto'\n  };\n  const btnStyle = {\n    marginTop: 10\n  };\n  const formStyle = {\n    height: \"auto\",\n    alignItems: \"baseline\"\n  };\n  const btncss = {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    width: \"100%\"\n  };\n  const linkStyle = {\n    textDecoration: \"none\"\n  };\n  const initialValues = {\n    otp: ''\n  }; // validateSchema\n  // on submit funtion\n\n  const onSubmit = (values, props) => {\n    // alert(JSON.stringify(values),null,2)\n    // props.resetForm()\n    axios.post('http://localhost:3333/otp', values).then(function (response) {\n      if (response.status == 200 && response.data && response.data.messeage == \"success\") {\n        console.log(\"Success Response : \", response.data.messeage);\n        history.push(\"/reset\");\n      } else {\n        setLoginerror(true);\n      }\n\n      console.log(response);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 5,\n      style: paperStyle,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        align: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: \" Forgot Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"caption\",\n          children: \" Please Verify Your Email \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: initialValues,\n        onSubmit: onSubmit,\n        children: props => /*#__PURE__*/_jsxDEV(Form, {\n          style: formStyle,\n          noValidate: true,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              textAlign: \"center\"\n            },\n            children: loginerror ? /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                padding: \"10px\",\n                color: \"#f44336\"\n              },\n              children: [\" \", \"Wrong OTP\", \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 37\n            }, this) : null\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            as: TextField,\n            name: \"otp\",\n            label: \"Otp\",\n            fullWidth: true,\n            error: props.errors.otp && props.touched.otp,\n            helperText: /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"otp\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 45\n            }, this),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: btncss,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              style: btnStyle,\n              variant: \"contained\",\n              color: \"primary\",\n              children: \"Submit OTP\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Otp, \"DlB2X5QB6MW+WvqpMqvpj4/LK/o=\", false, function () {\n  return [useHistory];\n});\n\n_c = Otp;\nexport default Otp;\n\nvar _c;\n\n$RefreshReg$(_c, \"Otp\");","map":{"version":3,"sources":["D:/waviz/react-training/Rahul/helloworld-waviz/src/components/Otp.jsx"],"names":["React","useState","Grid","Paper","Button","Typography","TextField","Formik","Form","Field","ErrorMessage","validateYupSchema","useHistory","axios","Otp","history","loginerror","setLoginerror","otp","setOtp","paperStyle","padding","width","margin","btnStyle","marginTop","formStyle","height","alignItems","btncss","display","justifyContent","linkStyle","textDecoration","initialValues","onSubmit","values","props","post","then","response","status","data","messeage","console","log","push","textAlign","color","errors","touched"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Grid, Paper, Button, Typography } from '@material-ui/core';\nimport { TextField } from \"@material-ui/core\";\nimport { Formik, Form, Field, ErrorMessage, validateYupSchema } from \"formik\";\nimport {  useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\n\n\n\nconst Otp = () => {\n\n    // style\n    var history = useHistory();\n    const [loginerror, setLoginerror] = useState(false);\n    const [otp, setOtp] = useState(\"\");\n      const paperStyle = { padding: '40px 20px', width: 300, margin: '20px auto' }\n    const btnStyle = { marginTop: 10 }\n    const formStyle = { height: \"auto\", alignItems: \"baseline\" }\n    const btncss = {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        width: \"100%\",\n    }\n    const linkStyle = { textDecoration: \"none\" }\n    const initialValues = {\n        otp: '',\n     \n    }\n    // validateSchema\n \n\n    // on submit funtion\n    const onSubmit = (values, props) => {\n        // alert(JSON.stringify(values),null,2)\n        // props.resetForm()\n\n        axios.post('http://localhost:3333/otp', values)\n            .then(function (response) {\n\n                if (response.status == 200 && response.data && response.data.messeage == \"success\") {\n                    console.log(\"Success Response : \", response.data.messeage)\n                    history.push(\"/reset\");\n                } else {\n                    setLoginerror(true)\n                }\n                console.log(response);\n            })\n    }\n    return (\n        <Grid>\n            <Paper elevation={5} style={paperStyle}>\n                <Grid align='center'>\n                    <Typography variant=\"h6\"> Forgot Password</Typography>\n                    <Typography variant=\"caption\"> Please Verify Your Email </Typography>\n                </Grid>\n                <Formik initialValues={initialValues} onSubmit={onSubmit}>\n                    {(props) => (\n                        <Form style={formStyle} noValidate >\n                            {/* {console.log(props)} */}\n                        {/* error */}\n\n                            <div style={{ textAlign: \"center\" }}>\n                                {loginerror ? (\n                                    <p\n                                        style={{\n                                            padding: \"10px\",\n                                            color: \"#f44336\",\n                                        }}\n                                    >\n                                        {\" \"}\n                                       Wrong OTP{\" \"}\n                                    </p>\n                                ) : null}\n                            </div>\n\n                        {/* error */}\n\n\n                            {/* email */}\n\n                            <Field as={TextField} name=\"otp\" label='Otp' fullWidth error={props.errors.otp && props.touched.otp}\n                                helperText={<ErrorMessage name='otp' />} required />\n                          \n                            {/* button */}\n\n                            <div style={btncss}>\n                                <Button type=\"submit\" style={btnStyle} variant='contained' color='primary' >\n                                    Submit OTP\n                                </Button>\n                                \n                            </div>\n                        </Form>\n                    )}\n                </Formik>\n            </Paper>\n        </Grid>\n    )\n}\nexport default Otp;"]},"metadata":{},"sourceType":"module"}