{"ast":null,"code":"var _jsxFileName = \"D:\\\\waviz\\\\react-training\\\\Rahul\\\\helloworld-waviz\\\\src\\\\components\\\\Login.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Grid, Paper, Button, Typography } from '@material-ui/core';\nimport { TextField } from \"@material-ui/core\";\nimport { Formik, Form, Field, ErrorMessage, validateYupSchema } from \"formik\";\nimport * as Yup from 'yup';\nimport { Link, useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  _s();\n\n  useEffect(() => {\n    if (localStorage.getItem('token')) {\n      history.push('/dashboard');\n    }\n  }, []);\n  var history = useHistory();\n  const [loginerror, setLoginerror] = useState(false);\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const paperStyle = {\n    padding: '40px 20px',\n    width: 300,\n    margin: '20px auto'\n  };\n  const btnStyle = {\n    marginTop: 10\n  };\n  const formStyle = {\n    height: \"auto\",\n    alignItems: \"baseline\"\n  };\n  const btncss = {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    width: \"100%\"\n  };\n  const linkStyle = {\n    textDecoration: \"none\"\n  };\n  const passwordRegularExp = /^(?=.*?[A-Za-z])(?=.*[A-Z])(?=.*?[0-9]).{6,}$/;\n  const initialValues = {\n    email: '',\n    password: ''\n  };\n  const validateSchema = Yup.object().shape({\n    email: Yup.string().email(\"Enter vaild Email\").required(\"Required\"),\n    password: Yup.string().min(8, \"Min carrector should be 8\").matches(passwordRegularExp, \"Password must have uppercase,lovercase,number,special Symbol\").required(\"Required\")\n  });\n\n  const onSubmit = (values, props) => {\n    axios.post('http://localhost:3333/login', values).then(function (response) {\n      if (response.status == 200 && response.data && response.data.messeage == \"success\") {\n        console.log(\"Success Response : \", response.data.messeage);\n        localStorage.setItem('token', \"myVerySecureTokenforGdubey\");\n        history.push(\"/dashboard\");\n      } else {\n        setLoginerror(true);\n      }\n\n      console.log(response);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 5,\n      style: paperStyle,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        align: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: \" Login Here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"caption\",\n          children: \" Fill the form to Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: initialValues,\n        validationSchema: validateSchema,\n        onSubmit: onSubmit,\n        children: props => /*#__PURE__*/_jsxDEV(Form, {\n          style: formStyle,\n          noValidate: true,\n          children: [console.log(props), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              textAlign: \"center\"\n            },\n            children: loginerror ? /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                padding: \"10px\",\n                color: \"#f44336\"\n              },\n              children: [\" \", \"Wrong Email or Password\", \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 37\n            }, this) : null\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            as: TextField,\n            name: \"email\",\n            label: \"Email\",\n            fullWidth: true,\n            error: props.errors.email && props.touched.email,\n            helperText: /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 45\n            }, this),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            as: TextField,\n            name: \"password\",\n            error: props.errors.password && props.touched.password,\n            label: \"Password\",\n            type: \"password\",\n            fullWidth: true,\n            helperText: /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 55\n            }, this),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: btncss,\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              style: btnStyle,\n              variant: \"contained\",\n              color: \"primary\",\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              style: linkStyle,\n              to: \"/forgot\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\",\n                style: btnStyle,\n                variant: \"contained\",\n                children: \"Forgot Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 70\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/registration\",\n            children: \"Sign Up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Login, \"NJeoOQK4xUVB3DI9nGGGi7k+iHE=\", false, function () {\n  return [useHistory];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["D:/waviz/react-training/Rahul/helloworld-waviz/src/components/Login.jsx"],"names":["React","useState","useEffect","Grid","Paper","Button","Typography","TextField","Formik","Form","Field","ErrorMessage","validateYupSchema","Yup","Link","useHistory","axios","Login","localStorage","getItem","history","push","loginerror","setLoginerror","email","setEmail","password","setPassword","paperStyle","padding","width","margin","btnStyle","marginTop","formStyle","height","alignItems","btncss","display","justifyContent","linkStyle","textDecoration","passwordRegularExp","initialValues","validateSchema","object","shape","string","required","min","matches","onSubmit","values","props","post","then","response","status","data","messeage","console","log","setItem","textAlign","color","errors","touched"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Grid, Paper, Button, Typography } from '@material-ui/core';\nimport { TextField } from \"@material-ui/core\";\nimport { Formik, Form, Field, ErrorMessage, validateYupSchema } from \"formik\";\nimport * as Yup from 'yup'\nimport { Link, useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\n\n\nconst Login = () => {\n    useEffect(()=>{\n        if(localStorage.getItem('token')){\n            history.push('/dashboard')\n        }\n    },[])\n    var history = useHistory();\n    const [loginerror, setLoginerror] = useState(false);\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const paperStyle = { padding: '40px 20px', width: 300, margin: '20px auto' }\n    const btnStyle = { marginTop: 10 }\n    const formStyle = { height: \"auto\", alignItems: \"baseline\" }\n    const btncss = {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        width: \"100%\",\n    }\n    const linkStyle = { textDecoration: \"none\" }\n    const passwordRegularExp = /^(?=.*?[A-Za-z])(?=.*[A-Z])(?=.*?[0-9]).{6,}$/\n    const initialValues = {\n        email: '',\n        password: '',\n\n    }\n    const validateSchema = Yup.object().shape({\n\n\n        email: Yup.string().email(\"Enter vaild Email\").required(\"Required\"),\n        password: Yup.string().min(8, \"Min carrector should be 8\").matches(passwordRegularExp, \"Password must have uppercase,lovercase,number,special Symbol\").required(\"Required\"),\n\n\n    })\n    const onSubmit = (values, props) => {\n       \n        \n        axios.post('http://localhost:3333/login', values)\n            .then(function (response) {\n\n\n                if (response.status == 200 && response.data && response.data.messeage == \"success\") {\n                    console.log(\"Success Response : \", response.data.messeage)\n                    localStorage.setItem('token', \"myVerySecureTokenforGdubey\");\n                    history.push(\"/dashboard\");\n\n                } else {\n                    setLoginerror(true)\n                }\n                console.log(response);\n            })\n    }\n    return (\n        <Grid>\n            <Paper elevation={5} style={paperStyle}>\n                <Grid align='center'>\n                    <Typography variant=\"h6\"> Login Here</Typography>\n                    <Typography variant=\"caption\"> Fill the form to Login</Typography>\n                </Grid>\n                <Formik initialValues={initialValues} validationSchema={validateSchema} onSubmit={onSubmit}>\n                    {(props) => (\n                        <Form style={formStyle} noValidate >\n                            {console.log(props)}\n                        {/* error */}\n\n                            <div style={{ textAlign: \"center\" }}>\n                                {loginerror ? (\n                                    <p\n                                        style={{\n                                            padding: \"10px\",\n                                            color: \"#f44336\",\n                                        }}\n                                    >\n                                        {\" \"}\n                                        Wrong Email or Password{\" \"}\n                                    </p>\n                                ) : null}\n                            </div>\n\n                        {/* error */}\n\n\n                            {/* email */}\n\n                            <Field as={TextField} name=\"email\" label='Email' fullWidth error={props.errors.email && props.touched.email}\n                                helperText={<ErrorMessage name='email' />} required />\n\n\n\n                            {/* password */}\n\n                            <Field as={TextField} name=\"password\" error={props.errors.password && props.touched.password} label=\"Password\" type=\"password\"\n                                fullWidth helperText={<ErrorMessage name='password' />} required />\n\n\n                            {/* button */}\n                            <div style={btncss}>\n                                <Button type=\"submit\" style={btnStyle} variant='contained' color='primary' >\n                                    Login\n                                </Button>\n                                <Link style={linkStyle} to=\"/forgot\"><Button type=\"submit\" style={btnStyle} variant='contained'  >\n                                    Forgot Password\n                                </Button></Link>\n                               \n                            </div>\n                            <Link to=\"/registration\">Sign Up</Link>\n                        </Form>\n                    )}\n                </Formik>\n            </Paper>\n        </Grid>\n    )\n}\nexport default Login;"]},"metadata":{},"sourceType":"module"}