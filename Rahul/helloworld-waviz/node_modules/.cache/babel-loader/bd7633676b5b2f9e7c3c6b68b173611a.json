{"ast":null,"code":"var _jsxFileName = \"D:\\\\waviz\\\\helloworld-waviz\\\\src\\\\components\\\\PublicRoute.jsx\";\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PublicRoute = ({\n  component: Component,\n  redirectRoute,\n  guardFunction,\n  ...rest\n}) => {\n  return (\n    /*#__PURE__*/\n    // restricted = false meaning public route\n    // restricted = true meaning restricted route\n    _jsxDEV(Route, { ...rest,\n      render: props => redirectRoute() && guardFunction ? /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(Component, { ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }, this)\n  );\n};\n\n_c = PublicRoute;\nexport default PublicRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"PublicRoute\");","map":{"version":3,"sources":["D:/waviz/helloworld-waviz/src/components/PublicRoute.jsx"],"names":["React","Route","Redirect","PublicRoute","component","Component","redirectRoute","guardFunction","rest","props"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;;;AAGA,MAAMC,WAAW,GAAG,CAAC;AAACC,EAAAA,SAAS,EAAEC,SAAZ;AAAsBC,EAAAA,aAAtB;AAAqCC,EAAAA,aAArC;AAAoD,KAAGC;AAAvD,CAAD,KAAkE;AAClF;AAAA;AACI;AACA;AACA,YAAC,KAAD,OAAWA,IAAX;AAAiB,MAAA,MAAM,EAAEC,KAAK,IAC1BH,aAAa,MAAMC,aAAnB,gBACI,QAAC,QAAD;AAAU,QAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,cADJ,gBAEE,QAAC,SAAD,OAAeE;AAAf;AAAA;AAAA;AAAA;AAAA;AAHN;AAAA;AAAA;AAAA;AAAA;AAHJ;AASH,CAVD;;KAAMN,W;AAYN,eAAeA,WAAf","sourcesContent":["import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\n\r\nconst PublicRoute = ({component: Component,redirectRoute, guardFunction, ...rest}) => {\r\n    return (\r\n        // restricted = false meaning public route\r\n        // restricted = true meaning restricted route\r\n        <Route {...rest} render={props => (\r\n            redirectRoute() && guardFunction ?\r\n                <Redirect to=\"/dashboard\" />\r\n            : <Component {...props} />\r\n        )} />\r\n    );\r\n};\r\n\r\nexport default PublicRoute;"]},"metadata":{},"sourceType":"module"}