{"ast":null,"code":"var _jsxFileName = \"D:\\\\waviz\\\\helloworld-waviz\\\\src\\\\App.jsx\";\nimport React, { useState } from \"react\";\nimport Login from \"./components/Login\";\nimport { Route, Switch } from 'react-router-dom';\nimport Reagistration from \"./components/Registration\";\nimport Error from \"./components/Error\";\nimport Home from \"./components/Home\";\nimport Forgot from \"./components/Forgot\";\nimport Otp from \"./components/Otp\";\nimport Reset from \"./components/Reset\";\nimport ProtectedRoute from \"./components/ProtectedRoute\";\nimport Dashboard from \"./components/Dashboard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          component: Home\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n          exact: true,\n          path: \"/login\",\n          component: Login,\n          guardFunctionArgs: {\n            'one': 'one'\n          },\n          redirectRoute: \"/dashboard\",\n          guardFunction: args => {\n            console.log(args);\n            const token = localStorage.getItem('token');\n            return token && token.length < 0;\n          },\n          component: Login\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/registration\",\n          component: Reagistration\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Protected, {\n          path: \"/dashboard\",\n          redirectRoute: \"/\",\n          guardFunctionArgs: {\n            'one': 'one'\n          },\n          guardFunction: args => {\n            console.log(args);\n            const token = localStorage.getItem('token');\n            return token && token.length > 0;\n          },\n          component: Dashboard,\n          exact: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/forgot\",\n          component: Forgot\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 22\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/otp\",\n          component: Otp\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/reset\",\n          component: Reset\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          component: Error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/waviz/helloworld-waviz/src/App.jsx"],"names":["React","useState","Login","Route","Switch","Reagistration","Error","Home","Forgot","Otp","Reset","ProtectedRoute","Dashboard","App","args","console","log","token","localStorage","getItem","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,kBAA9B;AACA,OAAOC,aAAP,MAA0B,2BAA1B;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,GAAP,MAAgB,kBAAhB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,cAAP,MAA2B,6BAA3B;AACA,OAAOC,SAAP,MAAsB,wBAAtB;;;;AAIA,MAAMC,GAAG,GAAG,MAAM;AAId,sBACI;AAAA,2BAEI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,6BACI,QAAC,MAAD;AAAA,gCACI,QAAC,KAAD;AAAQ,UAAA,KAAK,MAAb;AAAc,UAAA,IAAI,EAAC,GAAnB;AAAuB,UAAA,SAAS,EAAEN;AAAlC;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,cAAD;AAAgB,UAAA,KAAK,MAArB;AAAsB,UAAA,IAAI,EAAC,QAA3B;AAAoC,UAAA,SAAS,EAAEL,KAA/C;AACA,UAAA,iBAAiB,EAAE;AAAC,mBAAM;AAAP,WADnB;AAEA,UAAA,aAAa,EAAC,YAFd;AAGA,UAAA,aAAa,EAAGY,IAAD,IAAU;AACrBC,YAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,kBAAMG,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AACA,mBAAOF,KAAK,IAAIA,KAAK,CAACG,MAAN,GAAe,CAA/B;AACH,WAPD;AAQA,UAAA,SAAS,EAAElB;AARX;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAaI,QAAC,KAAD;AAAO,UAAA,KAAK,MAAZ;AAAa,UAAA,IAAI,EAAC,eAAlB;AAAkC,UAAA,SAAS,EAAEG;AAA7C;AAAA;AAAA;AAAA;AAAA,gBAbJ,eAcI,QAAC,SAAD;AACI,UAAA,IAAI,EAAC,YADT;AAEI,UAAA,aAAa,EAAC,GAFlB;AAGI,UAAA,iBAAiB,EAAE;AAAC,mBAAM;AAAP,WAHvB;AAII,UAAA,aAAa,EAAGS,IAAD,IAAU;AACrBC,YAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,kBAAMG,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AACA,mBAAOF,KAAK,IAAIA,KAAK,CAACG,MAAN,GAAe,CAA/B;AACH,WARL;AASI,UAAA,SAAS,EAAER,SATf;AAUI,UAAA,KAAK;AAVT;AAAA;AAAA;AAAA;AAAA,gBAdJ,eA6BK,QAAC,KAAD;AAAO,UAAA,KAAK,MAAZ;AAAa,UAAA,IAAI,EAAC,SAAlB;AAA4B,UAAA,SAAS,EAAEJ;AAAvC;AAAA;AAAA;AAAA;AAAA,gBA7BL,eA8BI,QAAC,KAAD;AAAO,UAAA,KAAK,MAAZ;AAAa,UAAA,IAAI,EAAC,MAAlB;AAAyB,UAAA,SAAS,EAAEC;AAApC;AAAA;AAAA;AAAA;AAAA,gBA9BJ,eA+BI,QAAC,KAAD;AAAO,UAAA,KAAK,MAAZ;AAAa,UAAA,IAAI,EAAC,QAAlB;AAA2B,UAAA,SAAS,EAAEC;AAAtC;AAAA;AAAA;AAAA;AAAA,gBA/BJ,eAgCI,QAAC,KAAD;AAAO,UAAA,SAAS,EAAEJ;AAAlB;AAAA;AAAA;AAAA;AAAA,gBAhCJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AAFJ,mBADJ;AA0CH,CA9CD;;KAAMO,G;AA+CN,eAAeA,GAAf","sourcesContent":["import React, { useState } from \"react\";\nimport Login from \"./components/Login\";\nimport { Route, Switch } from 'react-router-dom';\nimport Reagistration from \"./components/Registration\";\nimport Error from \"./components/Error\";\nimport Home from \"./components/Home\";\nimport Forgot from \"./components/Forgot\";\nimport Otp from \"./components/Otp\";\nimport Reset from \"./components/Reset\";\nimport ProtectedRoute from \"./components/ProtectedRoute\";\nimport Dashboard from \"./components/Dashboard\";\n\n\n\nconst App = () => {\n\n  \n    \n    return (\n        <>\n\n            <div className=\"App\">\n                <Switch>\n                    <Route  exact path='/' component={Home} />\n                    <ProtectedRoute exact path='/login' component={Login} \n                    guardFunctionArgs={{'one':'one'}}\n                    redirectRoute=\"/dashboard\" \n                    guardFunction={(args) => {\n                        console.log(args)\n                        const token = localStorage.getItem('token');\n                        return token && token.length < 0;\n                    }}\n                    component={Login}/>\n\n                    \n                    <Route exact path='/registration' component={Reagistration} />\n                    <Protected\n                        path=\"/dashboard\"\n                        redirectRoute=\"/\"\n                        guardFunctionArgs={{'one':'one'}}\n                        guardFunction={(args) => {\n                            console.log(args)\n                            const token = localStorage.getItem('token');\n                            return token && token.length > 0;\n                        }}\n                        component={Dashboard}\n                        exact\n                    />     \n                         \n            \n          \n                     <Route exact path='/forgot' component={Forgot} />\n                    <Route exact path='/otp' component={Otp} />\n                    <Route exact path='/reset' component={Reset} />                   \n                    <Route component={Error} />\n                </Switch>\n\n            </div>\n        </>\n    )\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}